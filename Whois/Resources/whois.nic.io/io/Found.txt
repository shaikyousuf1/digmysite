---
#
# .io Parsing Template
#
name: whois.nic.io/io/Found

# Use this template for queries to whois.nic.io:
tag: whois.nic.io
tag: io

# End tokens on new lines
terminateOnNewLine: true

# Set query response type:
set: Status = Found
---
Domain : { DomainName : IsDomainName, ToHostName }
Status : { DomainStatus ? : Repeating, CleanDomainStatus }
Expiry : { Expiration ? : ToDateTimeUtc("yyyy-MM-dd") }

NS 1   : { NameServers ? : IsDomainName, ToLower, Repeating }
NS 2   : { NameServers ? : IsDomainName, ToLower, Repeating }
NS 3   : { NameServers ? : IsDomainName, ToLower, Repeating }
NS 4   : { NameServers ? : IsDomainName, ToLower, Repeating }

       : { Registrant.Name ? }
       : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
       : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
       : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
       : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
       : { Registrant.Address ? : IsNotEmpty, IsNot('.') }

Owner  : { Registrant.Name ? }
Owner  : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
Owner  : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
Owner  : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
Owner  : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
Owner  : { Registrant.Address ? : IsNotEmpty, IsNot('.') }
