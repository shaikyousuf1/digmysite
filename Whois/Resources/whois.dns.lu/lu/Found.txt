---
#
# .lu Parsing Template
#
name: whois.dns.lu/lu/Found

# Use this template for queries to whois.dns.lu:
tag: whois.dns.lu
tag: lu

# End tokens on new lines
terminateOnNewLine: true

# Set query response type:
set: Status = Found
---
domainname:{ DomainName : Trim, IsDomainName, ToHostName }
domaintype:{ DomainStatus ? : Trim, Repeating, SubstringBefore(' ') }
nserver:{ NameServers ? : Trim, SubstringBefore(' '), IsDomainName, ToLower, Repeating }
registered:{ Registered ? : Trim, ToDateTimeUtc("dd/MM/yyyy") }
org-name:{ Registrant.Name ? : Trim }
org-address:{ Registrant.Address ? : Trim, IsNotEmpty }
org-zipcode:{ Registrant.Address ? : Trim, IsNotEmpty }
org-city:{ Registrant.Address ? : Trim, IsNotEmpty }
org-country:{ Registrant.Address ? : Trim, IsNotEmpty }
adm-name:{ AdminContact.Name ? : Trim }
adm-address:{ AdminContact.Address ? : Trim, IsNotEmpty }
adm-address:{ AdminContact.Address ? : Trim, IsNotEmpty }
adm-zipcode:{ AdminContact.Address ? : Trim, IsNotEmpty }
adm-city:{ AdminContact.Address ? : Trim, IsNotEmpty }
adm-country:{ AdminContact.Address ? : Trim, IsNotEmpty }
adm-email:{ AdminContact.Email ? : Trim, IsEmail }
tec-name:{ TechnicalContact.Name ? : Trim }
tec-address:{ TechnicalContact.Address ? : Trim, IsNotEmpty }
tec-address:{ TechnicalContact.Address ? : Trim, IsNotEmpty }
tec-zipcode:{ TechnicalContact.Address ? : Trim, IsNotEmpty }
tec-city:{ TechnicalContact.Address ? : Trim, IsNotEmpty }
tec-country:{ TechnicalContact.Address ? : Trim, IsNotEmpty }
tec-email:{ TechnicalContact.Email ? : Trim, IsEmail }
registrar-name:{ Registrar.Name ? : Trim }
registrar-url:{ Registrar.Url ? : Trim, IsLooseAbsoluteUrl, ToLower }

