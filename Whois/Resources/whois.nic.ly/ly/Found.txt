---
#
# .ly Parsing Template
#
name: whois.nic.ly/ly/Found

# Use this template for queries to whois.nic.ly:
tag: whois.nic.ly
tag: ly

# End tokens on new lines
terminateOnNewLine: true

# Set query response type:
set: Status = Found
---
Registrant:
   { Registrant.Organization }
   { Registrant.Name ? : IsNotEmpty, !StartsWith('Zip') }
   { Registrant.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { Registrant.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { Registrant.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { Registrant.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { Registrant.Address ? : SubstringAfter('Zip/Postal code: '), IsNotEmpty }
   { Registrant.TelephoneNumber ? : SubstringAfter('Phone: '), IsPhoneNumber }
   { Registrant.FaxNumber ? : SubstringAfter('Fax: '), IsPhoneNumber }
   { Registrant.Email ? : IsEmail }

Domain Name:   google.ly

Administrative Contact:
   { AdminContact.Organization }
   { AdminContact.Name ? : IsNotEmpty, !StartsWith('Zip') }
   { AdminContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { AdminContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { AdminContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { AdminContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { AdminContact.Address ? : SubstringAfter('Zip/Postal code: '), IsNotEmpty }
   { AdminContact.TelephoneNumber ? : SubstringAfter('Phone: '), IsPhoneNumber }
   { AdminContact.FaxNumber ? : SubstringAfter('Fax: '), IsPhoneNumber }
   { AdminContact.Email ? : IsEmail }

Technical Contact:
   { TechnicalContact.Organization }
   { TechnicalContact.Name ? : IsNotEmpty, !StartsWith('Zip') }
   { TechnicalContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { TechnicalContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { TechnicalContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { TechnicalContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { TechnicalContact.Address ? : SubstringAfter('Zip/Postal code: '), IsNotEmpty }
   { TechnicalContact.TelephoneNumber ? : SubstringAfter('Phone: '), IsPhoneNumber }
   { TechnicalContact.FaxNumber ? : SubstringAfter('Fax: '), IsPhoneNumber }
   { TechnicalContact.Email ? : IsEmail }

Billing Contact:
   { BillingContact.Organization }
   { BillingContact.Name ? : IsNotEmpty, !StartsWith('Zip') }
   { BillingContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { BillingContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { BillingContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { BillingContact.Address ? : IsNotEmpty, !StartsWith('Zip') }
   { BillingContact.Address ? : SubstringAfter('Zip/Postal code: '), IsNotEmpty }
   { BillingContact.TelephoneNumber ? : SubstringAfter('Phone: '), IsPhoneNumber }
   { BillingContact.FaxNumber ? : SubstringAfter('Fax: '), IsPhoneNumber }
   { BillingContact.Email ? : IsEmail }

Created: { Registered ? : ToDateTimeUtc("yyyy-MM-dd HH:mm:ss") }
Updated: { Updated    ? : ToDateTimeUtc("yyyy-MM-dd HH:mm:ss") }
Expired: { Expiration ? : ToDateTimeUtc("yyyy-MM-dd HH:mm:ss") }

Domain servers in listed order:
   { NameServers ? : IsDomainName, ToLower, Repeating }

Domain Status: { DomainStatus ? : Repeating, CleanDomainStatus }
