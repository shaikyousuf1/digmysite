---
#
# .my Parsing Template
#
name: whois.mynic.my/my/Found

# Use this template for queries to whois.mynic.my:
tag: whois.mynic.my
tag: my

# End tokens on new lines
terminateOnNewLine: true

# Set query response type:
set: Status = Found
---
a [Domain Name]                 { DomainName : IsDomainName, ToHostName }
c [Record Created]              { Registered ? : ToDateTimeUtc("dd-MMM-yyyy") }
d [Record Expired]              { Expiration ? : ToDateTimeUtc("dd-MMM-yyyy") }
e [Record Last Modified]        { Updated ? : ToDateTimeUtc("dd-MMM-yyyy") }
g [Registrant Code]                            { Registrant.RegistryId }
  { Registrant.Name ? }
  { Registrant.Organization ? }
  { Registrant.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { Registrant.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { Registrant.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { Registrant.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { Registrant.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { Registrant.Email ? : Trim, IsEmail }
  (Tel) { Registrant.TelephoneNumber ? : Trim, IsPhoneNumber }
  (Fax) { Registrant.FaxNumber ? : Trim, IsPhoneNumber }

h [Administrative Contact Code]                { AdminContact.RegistryId }
  { AdminContact.Name ? }
  { AdminContact.Organization ? }
  { AdminContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { AdminContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { AdminContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { AdminContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { AdminContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { AdminContact.Email ? : Trim, IsEmail }
  (Tel) { AdminContact.TelephoneNumber ? : Trim, IsPhoneNumber }
  (Fax) { AdminContact.FaxNumber ? : Trim, IsPhoneNumber }

  
i [Billing Contact Code]                       { BillingContact.RegistryId }
  { BillingContact.Name ? }
  { BillingContact.Organization ? }
  { BillingContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { BillingContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { BillingContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { BillingContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { BillingContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { BillingContact.Email ? : Trim, IsEmail }
  (Tel) { BillingContact.TelephoneNumber ? : Trim, IsPhoneNumber }
  (Fax) { BillingContact.FaxNumber ? : Trim, IsPhoneNumber }
  
j [Technical Contact Code]                     { TechnicalContact.RegistryId }
  { TechnicalContact.Name ? }
  { TechnicalContact.Organization ? }
  { TechnicalContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { TechnicalContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { TechnicalContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { TechnicalContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { TechnicalContact.Address ? : Trim, IsNotEmpty, !IsEmail, !StartsWith('(Tel)'), !StartsWith('(Fax)') }
  { TechnicalContact.Email ? : Trim, IsEmail }
  (Tel) { TechnicalContact.TelephoneNumber ? : Trim, IsPhoneNumber }
  (Fax) { TechnicalContact.FaxNumber ? : Trim, IsPhoneNumber }

 k [Primary Name Server]              { Null }
  { NameServers ? : SubstringBefore(' '), IsDomainName, ToLower }
  
 l [Secondary Name Server]            { Null }
  { NameServers ? : SubstringBefore(' '), IsDomainName, ToLower }
