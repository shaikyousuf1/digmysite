---
#
# .sg Parsing Template
#
name: whois.sgnic.sg/sg/Found01

# Use this template for queries to whois.sgnic.sg:
tag: whois.sgnic.sg
tag: sg

# End tokens on new lines
terminateOnNewLine: true

# Set query response type:
set: Status = Found
---
Registrar:   { Registrar.Name ? }
Registrant:  { Registrant.Name ? }

    Domain Name:		{ DomainName : IsDomainName, ToHostName }
    Creation Date:		{ Registered ? : ToDateTimeUtc("dd-MMM-yyyy HH:mm:ss") }
    Expiration Date:		{ Expiration ? : ToDateTimeUtc("dd-MMM-yyyy HH:mm:ss") }
    Domain Status:		{ DomainStatus ? : Repeating, CleanDomainStatus }


    Owner/Main Contact:

        Name:           { Registrant.Name : SubstringBefore(' (') }
        Registered Address(line1):	{ Registrant.Address ? : IsNotEmpty }
        Registered Address(line2):  { Registrant.Address ? : IsNotEmpty }	
        Registered Address(line3):  { Registrant.Address ? : IsNotEmpty }	
        Registered State:		{ Registrant.Address ? : IsNotEmpty }
        Registered Country:		{ Registrant.Address ? : IsNotEmpty }
        Registered Postalcode:		{ Registrant.Address ? : IsNotEmpty }

        Telephone:			{ Registrant.TelephoneNumber ? : IsPhoneNumber }
        Facsimile:			{ Registrant.FaxNumber ? : IsPhoneNumber }
        EMAIL:				{ Registrant.Email ? : IsEmail }


    Administrative Contact:

        Name:           { AdminContact.Name : SubstringBefore(' (') }
        Registered Address(line1):	{ AdminContact.Address ? : IsNotEmpty }
        Registered Address(line2):  { AdminContact.Address ? : IsNotEmpty }	
        Registered Address(line3):  { AdminContact.Address ? : IsNotEmpty }	
        Registered State:		{ AdminContact.Address ? : IsNotEmpty }
        Registered Country:		{ AdminContact.Address ? : IsNotEmpty }
        Registered Postalcode:		{ AdminContact.Address ? : IsNotEmpty }

        Telephone:			{ AdminContact.TelephoneNumber ? : IsPhoneNumber }
        Facsimile:			{ AdminContact.FaxNumber ? : IsPhoneNumber }
        EMAIL:				{ AdminContact.Email ? : IsEmail }

    Technical Contact:

        Name:           { TechnicalContact.Name : SubstringBefore(' (') }
        Registered Address(line1):	{ TechnicalContact.Address ? : IsNotEmpty }
        Registered Address(line2):  { TechnicalContact.Address ? : IsNotEmpty }	
        Registered Address(line3):  { TechnicalContact.Address ? : IsNotEmpty }	
        Registered State:		{ TechnicalContact.Address ? : IsNotEmpty }
        Registered Country:		{ TechnicalContact.Address ? : IsNotEmpty }
        Registered Postalcode:		{ TechnicalContact.Address ? : IsNotEmpty }

        Telephone:			{ TechnicalContact.TelephoneNumber ? : IsPhoneNumber }
        Facsimile:			{ TechnicalContact.FaxNumber ? : IsPhoneNumber }
        EMAIL:				{ TechnicalContact.Email ? : IsEmail }

    Billing Contact:

        Name:           { BillingContact.Name } ({ Registrant.RegistryId ? })        
        Registered Address(line1):	{ BillingContact.Address ? : IsNotEmpty }
        Registered Address(line2):  { BillingContact.Address ? : IsNotEmpty }	
        Registered Address(line3):  { BillingContact.Address ? : IsNotEmpty }	
        Registered State:		{ BillingContact.Address ? : IsNotEmpty }
        Registered Country:		{ BillingContact.Address ? : IsNotEmpty }
        Registered Postalcode:		{ BillingContact.Address ? : IsNotEmpty }

        Telephone:			{ BillingContact.TelephoneNumber ? : IsPhoneNumber }
        Facsimile:			{ BillingContact.FaxNumber ? : IsPhoneNumber }
        EMAIL:				{ BillingContact.Email ? : IsEmail }
          
    Name Servers:
        { NameServers ? : SubstringBefore(' ('), Trim, IsDomainName, ToLower, Repeating }

